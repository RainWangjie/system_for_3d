THREE.GeometryUtils={merge:function(e,r,t){console.warn("THREE.GeometryUtils: .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead.");var n;r instanceof THREE.Mesh&&(r.matrixAutoUpdate&&r.updateMatrix(),n=r.matrix,r=r.geometry),e.merge(r,n,t)},randomPointInTriangle:function(){var e=new THREE.Vector3;return function(r,t,n){var a=new THREE.Vector3,o=Math.random(),i=Math.random();o+i>1&&(o=1-o,i=1-i);var c=1-o-i;return a.copy(r),a.multiplyScalar(o),e.copy(t),e.multiplyScalar(i),a.add(e),e.copy(n),e.multiplyScalar(c),a.add(e),a}}(),randomPointInFace:function(e,r){var t,n,a;return t=r.vertices[e.a],n=r.vertices[e.b],a=r.vertices[e.c],THREE.GeometryUtils.randomPointInTriangle(t,n,a)},randomPointsInGeometry:function(e,r){function t(e){function r(t,n){if(t>n)return t;var a=t+Math.floor((n-t)/2);return E[a]>e?r(t,a-1):E[a]<e?r(a+1,n):a}var t=r(0,E.length-1);return t}var n,a,o,i,c,s=e.faces,m=e.vertices,u=s.length,l=0,E=[];for(a=0;u>a;a++)n=s[a],o=m[n.a],i=m[n.b],c=m[n.c],n._area=THREE.GeometryUtils.triangleArea(o,i,c),l+=n._area,E[a]=l;var f,y,d=[],v={};for(a=0;r>a;a++)f=Math.random()*l,y=t(f),d[a]=THREE.GeometryUtils.randomPointInFace(s[y],e),v[y]?v[y]+=1:v[y]=1;return d},randomPointsInBufferGeometry:function(e,r){function t(e){function r(t,n){if(t>n)return t;var a=t+Math.floor((n-t)/2);return m[a]>e?r(t,a-1):m[a]<e?r(a+1,n):a}var t=r(0,m.length-1);return t}var n,a,o,i,c=e.attributes.position.array,s=0,m=[];a=new THREE.Vector3,o=new THREE.Vector3,i=new THREE.Vector3;var u=c.length/9;for(n=0;u>n;n++)a.set(c[9*n+0],c[9*n+1],c[9*n+2]),o.set(c[9*n+3],c[9*n+4],c[9*n+5]),i.set(c[9*n+6],c[9*n+7],c[9*n+8]),area=THREE.GeometryUtils.triangleArea(a,o,i),s+=area,m.push(s);var l,E,f=[];for(n=0;r>n;n++)l=Math.random()*s,E=t(l),a.set(c[9*E+0],c[9*E+1],c[9*E+2]),o.set(c[9*E+3],c[9*E+4],c[9*E+5]),i.set(c[9*E+6],c[9*E+7],c[9*E+8]),f[n]=THREE.GeometryUtils.randomPointInTriangle(a,o,i);return f},triangleArea:function(){var e=new THREE.Vector3,r=new THREE.Vector3;return function(t,n,a){return e.subVectors(n,t),r.subVectors(a,t),e.cross(r),.5*e.length()}}(),center:function(e){return console.warn("THREE.GeometryUtils: .center() has been moved to Geometry. Use geometry.center() instead."),e.center()}};